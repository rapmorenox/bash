if [ -f ~/.bashrc ]; then
	source ~/.bashrc
fi

source ~/.iterm2_shell_integration.bash

# echo "
# ‚Å£‚≠ï ‚ùï ‚≠ï ‚ùï ‚ùå
#  ‚ûñ ‚ûï ‚ûñ ‚ûï ‚ûñ
#  ‚≠ï ‚ùï‚Å£‚ùå ‚ùï ‚≠ï
#  ‚ûñ ‚ûï ‚ûñ ‚ûï ‚ûñ
#  ‚ùå ‚ùï ‚ùå ‚ùï ‚≠ï
# "


imgcat /Users/rmoreno/Documents/pictquote/mario-tail.gif
# echo "‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è  "



echo "Bash Profile version ‚Ññ 1.6
Raphael Moreno @ 2018"

# cd desktop

export PS1="\w üçÑ  ‚≠êÔ∏è  ‚ûú "
echo ""


rapsite() {
	cd /Users/rmoreno/Documents/ssh
	ssh -i "Raph-AWS-krypt.co.pem" ec2-user@ec2-52-221-190-83.ap-southeast-1.compute.amazonaws.com;
	sudo yum update
	clear
}


# alias imac="ssh incomedigital@192.168.1.242"
# alias code='cd /; cd Applications; open sublime\ text.app; cd ~'
alias editprofile='cd ~; mate .bash_profile'
alias keychain='open /Applications/Utilities/Keychain\ Access.app'
# alias runtest='cd ~; source .bash_profile'
# alias sandbox='cd /Users/rmoreno/documents/sandbox'
# alias live!='cd /Users/rmoreno/Sites; livereload'
alias macip="Ifconfig en1 | grep ether"
# alias wifiz="/Users/rmoreno/Documents/sandbox/macip.sh"
alias desktop='cd /Users/rmoreno/desktop'
alias cdssh='cd /Users/rmoreno/Documents/ssh'
# alias backupz="/Users/rmoreno/Documents/sandbox/backup.sh"
alias notes="open /Applications/notes.app"
			# alias yt="mpsyt"
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'' | less'
alias brewup='brew update; brew upgrade; brew prune; brew cleanup; brew doctor'
alias speedtest="speedtest-cli"



mkcd () {
  mkdir "$1"
  cd "$1"
}



######################## Git Pushes ##############################

# msgCase() {
# 	case "$AddMsg" in
# 		[yY] | [yY][eE][sS])
# 		echo "Posting Auto Response Message"
# 		git commit -m"Auto-commit-push";
# 		;;
# 		*)
# 		read -p "Type message here: " gitmessage;
# 		git commit -m"$gitmessage";
# 	esac
# }
#
#
#
# pushgit() {
# 	cd /Users/rmoreno/Documents/sandbox/travel-insurance-mobile-app /Users/rmoreno/Documents/sandbox/travel-insurance-mobile-app;
# 	git add *;
# 	read -p "Auto Message? " AddMsg
# 	msgCase
# 	git push;
# 	cd ~;
# }


# pushnotes() {
# 	cd /Users/rmoreno/Documents/sandbox/codedump;
# 	git add *;
# 	read -p "Auto Message? " AddMsg
# 	msgCase
# 	git push;
# 	cd ~;
# }
#
#
# pushprofile() {
# 	cp /Users/rmoreno/.bash_profile /Users/rmoreno/Documents/sandbox/codedump;
# 	cd /Users/rmoreno/Documents/sandbox/codedump;
# 	git add .bash_profile;
# 	read -p "Auto Message? " AddMsg
# 	msgCase
# 	git push;
# 	cd ~;
# }






#################### Youtube Script #################################


#
# youtube() {
# 	cd /Users/rmoreno/Documents/sandbox/youtube;
# 	read -p "Do you want to create a folder for this? " ask_folder_creation
# 	case "$ask_folder_creation" in
# 		[yY] | [yY][eE][sS])
# 		read -p "Type the name of the folder to be created: " createFolder
# 		mkcd $createFolder
# 		;;
# 		*)
# 		echo "Ok, the file will be saved inside the Youtube download folder"
# 	esac
# 	read -p "Paste Youtube URL: " yturl
# 	youtube-dl --list-formats $yturl
# 	read -p "What format no do you need: " ytformat
# 	youtube-dl -i -f $ytformat $yturl
# 	open .
# }
	



#################################################################








###MACIP DUPE

wifiz() {

	echo ""
	echo "************************************"
	echo " your MAC IP Is  "
	ifconfig en0 | grep ether
	echo -e "\n${RED}Your local IP Address :$NC " ;ipconfig getifaddr en0
	echo "************************************"
	echo ""
	echo "Available systems:"
	arp -a
	echo ""
	echo ""
	read -p "Clone MAC Add: " CLONE
	echo "Cloning the MAC IP: $CLONE"
	read -p "Proceed?: " ANSWER
	case "$ANSWER" in
	[yY] | [yY][eE][sS])
		echo "Cloning $CLONE in process..."
		sleep 3s
		sudo ifconfig en0 ether $CLONE
		echo "Your new MAC address is now" ; Ifconfig en0 | grep ether
		;;
	*)
		echo "Terminating program"
	esac




}





#test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"


ii() {
        echo -e "\nAdditionnal information:$NC " ; uname -a
        echo -e "\n${RED}Users logged on:$NC " ; w -h
        echo -e "\n${RED}Current date :$NC " ; date
        echo -e "\n${RED}Machine stats :$NC " ; uptime
        echo -e "\n${RED}Current network location :$NC " ; scselect
		echo -e "\n${RED}Your local IP Address :$NC " ;ipconfig getifaddr en0
        echo -e  "\n${RED}DNS Configuration:$NC " ; scutil --dns
		echo
    }
	


	alias cp='cp -iv'                           # Preferred 'cp' implementation
	alias mv='mv -iv'                           # Preferred 'mv' implementation
	alias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation
	alias ll='ls -FGlAhp'                       # Preferred 'ls' implementation



# dd if=/dev/zero of=output.dat will create a unlimted file

	# create directory and go in
	mkcd () { mkdir -p "$1" && cd "$1"; }

	#   extract:  Extract most know archives with one command
	#   ---------------------------------------------------------
	    extract () {
	        if [ -f $1 ] ; then
	          case $1 in
	            *.tar.bz2)   tar xjf $1     ;;
	            *.tar.gz)    tar xzf $1     ;;
	            *.bz2)       bunzip2 $1     ;;
	            *.rar)       unrar e $1     ;;
	            *.gz)        gunzip $1      ;;
	            *.tar)       tar xf $1      ;;
	            *.tbz2)      tar xjf $1     ;;
	            *.tgz)       tar xzf $1     ;;
	            *.zip)       unzip $1       ;;
	            *.Z)         uncompress $1  ;;
	            *.7z)        7z x $1        ;;
	            *)     echo "'$1' cannot be extracted via extract()" ;;
	             esac
	         else
	             echo "'$1' is not a valid file"
	         fi
	    }


		alias qfind="find . -name "                 # qfind:    Quickly search for fileqfind


# added by Anaconda3 4.4.0 installer
export PATH="/Users/rmoreno/anaconda3/bin:$PATH"

export GPG_TTY=$(tty)

# added by Anaconda3 5.1.0 installer
export PATH="/anaconda3/bin:$PATH"

# added by Anaconda3 5.1.0 installer
export PATH="/Applications/anaconda3/bin:$PATH"
